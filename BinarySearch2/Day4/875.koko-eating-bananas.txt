public class Solution {
    int[] nums;
    int max;
    
    public int MinEatingSpeed(int[] piles, int h) 
    {
        max = h;
        nums = piles;
        
        int low = 1;
        int high = Int32.MaxValue;
        int index = high;
        
        while (low <= high)
        {
            int mid = low + (high-low)/2;
            
            if (CanFinish(mid))
            {
                index = mid;
                high = mid-1;
            }
            else
            {
                low = mid+1;
            }
        }
        
        return index;
    }
    
    public bool CanFinish(int key)
    {
        int count = 0;
        
        for (int i = 0; i < nums.Length; i++)
        {
            count += nums[i]/key;
            if (nums[i] % key > 0)
                count++;
            
        }
        
        
        return count <= max;
    }
}