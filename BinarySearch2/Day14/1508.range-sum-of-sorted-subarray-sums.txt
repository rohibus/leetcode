public class Solution {
    public int RangeSum(int[] nums, int n, int left, int right) 
    {
        List<long> result = new List<long>();
        long[] preSum = new long[n];
        long sum = 0;
        long mod = (int)1E9+7;
        
        for (int i = 0; i < n; i++)
        {
            sum += nums[i];
            sum %= mod;
            preSum[i] = sum;
        }
        
        for (int i = 0; i < n; i++)
        {
            for (int j = i; j < n; j++)
            {
                long leftSum = (i-1) >= 0 ? preSum[i-1] : 0;
                long current = preSum[j] - leftSum;
                current %= mod;
                result.Add(current);
            }
        }
        
        result.Sort();
        
        sum = 0;
        
        for (int i = left-1; i < right; i++)
        {
            sum += result[i];
            sum %= mod;
        }
        
        return (int)sum;
    }
}