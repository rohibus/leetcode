public class Solution {
    int[] nums;
    double hours;
    public int MinSpeedOnTime(int[] dist, double hour) 
    {
        nums = dist;
        hours = hour;
        int speed = -1;
        
        int start = 1;
        int end = 10000000;
        
        while (start <= end)
        {
            int mid = start + (end - start)/2;
            if (IsValid(mid))
            {
                speed = mid;
                end = mid -1;
            }
            else
            {
                start = mid + 1;
            }
        }
        
        return speed;
    }
    
    public bool IsValid(int speed)
    {
        double total = 0.0;
        
        for (int i = 0; i < nums.Length-1; i++)
        {
            total += (int)Math.Ceiling((double) nums[i]/speed);
        }
        
        total += (double)nums[nums.Length-1]/speed;
        
        if (total <= hours)
            return true;
        
        return false;
    }
}