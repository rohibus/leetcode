public class Solution {
    public int MaximumRemovals(string s, string p, int[] removable) 
    {
        int low = 0;
        int high = removable.Length;
        char[] sArr = s.ToCharArray();
        int index = 0;
        
        while (low <= high)
        {
            int mid = low + (high-low)/2;
            
            for (int i = 0; i < mid; i++)
            {
                sArr[removable[i]] = '*';
            }
            
            if (IsSubSeq(sArr, p))
            {
                index = mid+1;
                low = mid+1;
            }
            else
            {
                for (int i = 0; i < mid; i++)
                {
                    sArr[removable[i]] = s[removable[i]];
                }
                high = mid-1;
            }
        }
        
        return high;
    }
    
    public bool IsSubSeq(char[] sArr, string p)
    {
        int i = 0;
        int j = 0;
        
        while (i < sArr.Length && j < p.Length)
        {
            if (sArr[i] == p[j])
            {
                i++;
                j++;
            }
            else
            {
                i++;
            }
        }
        
        if (j == p.Length)
            return true;
        return false;
    }
}